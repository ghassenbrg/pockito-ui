{"openapi":"3.1.0","info":{"title":"Pockito API","description":"Personal Finance Application API","contact":{"name":"Pockito Team","email":"pockito@ghassen.io"},"license":{"name":"MIT License","url":"https://opensource.org/licenses/MIT"},"version":"1.0.0"},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"tags":[{"name":"Transaction Management","description":"APIs for managing financial transactions"},{"name":"User Management","description":"APIs for managing application users"},{"name":"Category Management","description":"APIs for managing user categories"}],"paths":{"/api/wallets/{walletId}":{"get":{"tags":["wallet-controller"],"operationId":"getWallet","parameters":[{"name":"walletId","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/WalletDto"}}}}}},"put":{"tags":["wallet-controller"],"operationId":"updateWallet","parameters":[{"name":"walletId","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletDto"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/WalletDto"}}}}}},"delete":{"tags":["wallet-controller"],"operationId":"deleteWallet","parameters":[{"name":"walletId","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK"}}}},"/api/users/{username}/currency":{"put":{"tags":["User Management"],"summary":"Update user default currency","description":"Updates the default currency for a specific user. Accepts 3-letter ISO currency codes.","operationId":"updateUserCurrency","parameters":[{"name":"username","in":"path","description":"Username of the user to update","required":true,"schema":{"type":"string"}},{"name":"currencyCode","in":"query","description":"Currency code (3-letter ISO)","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/UserDto"}}}}}}},"/api/users/{username}/country":{"put":{"tags":["User Management"],"summary":"Update user country","description":"Updates the country for a specific user. Accepts both alpha-2 and alpha-3 country codes.","operationId":"updateUserCountry","parameters":[{"name":"username","in":"path","description":"Username of the user to update","required":true,"schema":{"type":"string"}},{"name":"countryCode","in":"query","description":"Country code (alpha-2 or alpha-3)","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/UserDto"}}}}}}},"/api/transactions/{transactionId}":{"get":{"tags":["Transaction Management"],"summary":"Get transaction by ID","description":"Retrieves a single transaction by its unique ID.","operationId":"getTransaction","parameters":[{"name":"transactionId","in":"path","description":"Transaction ID to retrieve","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/TransactionDto"}}}}}},"put":{"tags":["Transaction Management"],"summary":"Update an existing transaction","description":"Updates an existing transaction with the same validation rules as creation.","operationId":"updateTransaction","parameters":[{"name":"transactionId","in":"path","description":"Transaction ID to update","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionDto"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/TransactionDto"}}}}}},"delete":{"tags":["Transaction Management"],"summary":"Delete a transaction","description":"Removes a transaction by ID.","operationId":"deleteTransaction","parameters":[{"name":"transactionId","in":"path","description":"Transaction ID to delete","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK"}}}},"/api/categories/{categoryId}":{"get":{"tags":["Category Management"],"summary":"Get category by ID","description":"Retrieves a specific category by its ID for the authenticated user.","operationId":"getCategory","parameters":[{"name":"categoryId","in":"path","description":"Category ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CategoryDto"}}}}}},"put":{"tags":["Category Management"],"summary":"Update category","description":"Updates an existing category for the authenticated user. Category names must remain unique per user.","operationId":"updateCategory","parameters":[{"name":"categoryId","in":"path","description":"Category ID to update","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CategoryDto"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CategoryDto"}}}}}},"delete":{"tags":["Category Management"],"summary":"Delete category","description":"Deletes a category for the authenticated user. Category must not have child categories.","operationId":"deleteCategory","parameters":[{"name":"categoryId","in":"path","description":"Category ID to delete","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK"}}}},"/api/wallets":{"get":{"tags":["wallet-controller"],"operationId":"getUserWallets","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WalletDto"}}}}}}},"post":{"tags":["wallet-controller"],"operationId":"createWallet","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletDto"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/WalletDto"}}}}}}},"/api/wallets/{walletId}/set-default":{"post":{"tags":["wallet-controller"],"operationId":"setDefaultWallet","parameters":[{"name":"walletId","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/WalletDto"}}}}}}},"/api/wallets/reorder":{"post":{"tags":["wallet-controller"],"operationId":"reorderWallets","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReorderWalletsRequest"}}},"required":true},"responses":{"200":{"description":"OK"}}}},"/api/transactions":{"get":{"tags":["Transaction Management"],"summary":"List transactions by criteria","description":"Retrieves transactions with filtering by userId, walletId, effectiveDate range, and transactionType. Supports pagination for large transaction volumes.","operationId":"listTransactions","parameters":[{"name":"walletId","in":"query","description":"Wallet ID to filter by","required":false,"schema":{"type":"string","format":"uuid"}},{"name":"startDate","in":"query","description":"Start date for date range filtering (yyyy-MM-dd)","required":false,"schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"End date for date range filtering (yyyy-MM-dd)","required":false,"schema":{"type":"string","format":"date"}},{"name":"transactionType","in":"query","description":"Transaction type to filter by","required":false,"schema":{"type":"string","enum":["TRANSFER","EXPENSE","INCOME"]}},{"name":"pageable","in":"query","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageTransactionDto"}}}}}},"post":{"tags":["Transaction Management"],"summary":"Create a new transaction","description":"Creates a new transaction with validation rules based on transaction type. EXPENSE requires walletFrom, INCOME requires walletTo, TRANSFER requires at least one wallet.","operationId":"createTransaction","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionDto"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/TransactionDto"}}}}}}},"/api/categories":{"get":{"tags":["Category Management"],"summary":"Get all categories","description":"Retrieves all categories for the authenticated user, ordered by name.","operationId":"getUserCategories","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CategoryDto"}}}}}}},"post":{"tags":["Category Management"],"summary":"Create a new category","description":"Creates a new category for the authenticated user. Category names must be unique per user.","operationId":"createCategory","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CategoryDto"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CategoryDto"}}}}}}},"/api/wallets/type/{type}":{"get":{"tags":["wallet-controller"],"operationId":"getWalletsByType","parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string","enum":["BANK_ACCOUNT","CASH","CREDIT_CARD","SAVINGS","CUSTOM"]}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WalletDto"}}}}}}}},"/api/wallets/default":{"get":{"tags":["wallet-controller"],"operationId":"getDefaultWallet","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/WalletDto"}}}}}}},"/api/users/{username}":{"get":{"tags":["User Management"],"summary":"Get user by username","description":"Retrieves a user by their username","operationId":"getUserByUsername","parameters":[{"name":"username","in":"path","description":"Username to search for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/UserDto"}}}}}}},"/api/users/{username}/exists":{"get":{"tags":["User Management"],"summary":"Check if user exists","description":"Checks whether a user with the specified username exists","operationId":"checkUserExists","parameters":[{"name":"username","in":"path","description":"Username to check","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/api/users/me":{"get":{"tags":["User Management"],"summary":"Get or create current user","description":"Retrieves the current authenticated user or creates a new one if it doesn't exist. This implements the core requirement to create users on first Keycloak token authentication.","operationId":"getOrCreateCurrentUser","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/UserDto"}}}}}}},"/api/transactions/wallet/{walletId}":{"get":{"tags":["Transaction Management"],"summary":"Get transactions by wallet","description":"Retrieves all transactions involving a specific wallet with pagination.","operationId":"getTransactionsByWallet","parameters":[{"name":"walletId","in":"path","description":"Wallet ID to filter by","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageable","in":"query","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageTransactionDto"}}}}}}},"/api/transactions/type/{transactionType}":{"get":{"tags":["Transaction Management"],"summary":"Get transactions by type","description":"Retrieves transactions of a specific type (EXPENSE, INCOME, TRANSFER) with pagination.","operationId":"getTransactionsByType","parameters":[{"name":"transactionType","in":"path","description":"Transaction type to filter by","required":true,"schema":{"type":"string","enum":["TRANSFER","EXPENSE","INCOME"]}},{"name":"pageable","in":"query","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageTransactionDto"}}}}}}},"/api/transactions/date-range":{"get":{"tags":["Transaction Management"],"summary":"Get transactions by date range","description":"Retrieves transactions within a specific date range with pagination.","operationId":"getTransactionsByDateRange","parameters":[{"name":"startDate","in":"query","description":"Start date for date range filtering (yyyy-MM-dd)","required":true,"schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","description":"End date for date range filtering (yyyy-MM-dd)","required":true,"schema":{"type":"string","format":"date"}},{"name":"pageable","in":"query","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageTransactionDto"}}}}}}},"/api/transactions/all":{"get":{"tags":["Transaction Management"],"summary":"Get all user transactions","description":"Retrieves all transactions for the authenticated user without pagination. Use with caution for users with large transaction volumes.","operationId":"getAllTransactions","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TransactionDto"}}}}}}}},"/api/categories/{parentCategoryId}/children":{"get":{"tags":["Category Management"],"summary":"Get child categories","description":"Retrieves all child categories of a specific parent category for the authenticated user.","operationId":"getChildCategories","parameters":[{"name":"parentCategoryId","in":"path","description":"Parent category ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CategoryDto"}}}}}}}},"/api/categories/type/{categoryType}":{"get":{"tags":["Category Management"],"summary":"Get categories by type","description":"Retrieves all categories of a specific type (EXPENSE or INCOME) for the authenticated user.","operationId":"getCategoriesByType","parameters":[{"name":"categoryType","in":"path","description":"Category type to filter by","required":true,"schema":{"type":"string","enum":["EXPENSE","INCOME"]}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CategoryDto"}}}}}}}},"/api/categories/root":{"get":{"tags":["Category Management"],"summary":"Get root categories","description":"Retrieves all root categories (categories without a parent) for the authenticated user.","operationId":"getRootCategories","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CategoryDto"}}}}}}}},"/api/categories/hierarchical":{"get":{"tags":["Category Management"],"summary":"Get hierarchical categories","description":"Retrieves all categories for the authenticated user in hierarchical order (parents first, then children).","operationId":"getHierarchicalCategories","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CategoryDto"}}}}}}}},"/api/categories/hierarchical/type/{categoryType}":{"get":{"tags":["Category Management"],"summary":"Get hierarchical categories by type","description":"Retrieves all categories of a specific type for the authenticated user in hierarchical order.","operationId":"getHierarchicalCategoriesByType","parameters":[{"name":"categoryType","in":"path","description":"Category type to filter by","required":true,"schema":{"type":"string","enum":["EXPENSE","INCOME"]}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CategoryDto"}}}}}}}},"/api/categories/color/{color}":{"get":{"tags":["Category Management"],"summary":"Get categories by color","description":"Retrieves all categories with a specific color for the authenticated user.","operationId":"getCategoriesByColor","parameters":[{"name":"color","in":"path","description":"Color to filter by (hex format, e.g., #A1B2C3)","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CategoryDto"}}}}}}}}},"components":{"schemas":{"WalletDto":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"username":{"type":"string"},"name":{"type":"string","maxLength":100,"minLength":1},"initialBalance":{"type":"number"},"balance":{"type":"number"},"currency":{"type":"string","enum":["USD","EUR","GBP","JPY","CHF","CAD","AUD","CNY","HKD","SEK","NOK","DKK","PLN","CZK","HUF","RON","BGN","HRK","RUB","TRY","BRL","MXN","ARS","CLP","COP","PEN","UYU","VES","KRW","SGD","TWD","THB","MYR","IDR","PHP","VND","INR","PKR","BDT","LKR","NPR","MMK","KHR","LAK","MNT","KZT","UZS","TJS","TMT","AZN","GEL","AMD","KGS","UAH","BYN","MDL","RSD","BAM","MKD","ALL","XCD","BBD","JMD","TTD","BZD","GYD","SRD","FJD","WST","TOP","VUV","PGK","SBD","KID","TVD","NIO","GTQ","HNL","SVC","PAB","CRC","BOB","EGP","MAD","TND","DZD","LYD","SDG","NGN","KES","GHS","XOF","XAF","XPF","ZAR","BWP","NAM","LSL","SZL","ZMW","ZWL","MWK","TZS","UGX","RWF","BIF","KMF","DJF","SOS","ERN","STN","CVE","GMD","GNF","SLL","LRD","GIP","FKP","SHP","IMP","JEP","GGP","ANG","AWG","BMD","KYD","BND","MOP","BTN","MVR","SCR","MUR","CDF","ETB","XDR","XAU","XAG","XPT","XPD"]},"iconUrl":{"type":"string","maxLength":500,"minLength":0},"goalAmount":{"type":"number","minimum":0.0},"type":{"type":"string","enum":["BANK_ACCOUNT","CASH","CREDIT_CARD","SAVINGS","CUSTOM"]},"isDefault":{"type":"boolean"},"orderPosition":{"type":"integer","format":"int32","minimum":0},"description":{"type":"string","maxLength":500,"minLength":0},"color":{"type":"string","maxLength":7,"minLength":7,"pattern":"^#[0-9A-Fa-f]{6}$"},"active":{"type":"boolean"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"createdBy":{"type":"string"},"updatedBy":{"type":"string"}},"required":["currency","initialBalance","isDefault","name","type"]},"UserDto":{"type":"object","properties":{"username":{"type":"string"},"country":{"type":"string","enum":["US","CA","GB","DE","FR","IT","ES","NL","BE","CH","AT","SE","NO","DK","FI","PL","CZ","HU","RO","BG","HR","SI","SK","LT","LV","EE","IE","PT","GR","CY","MT","LU","JP","CN","KR","IN","AU","NZ","SG","HK","TW","TH","MY","ID","PH","VN","MX","BR","AR","CL","CO","PE","VE","UY","PY","BO","EC","GT","HN","SV","NI","CR","PA","IL","AE","SA","TR","EG","ZA","NG","KE","MA","TN","DZ","LY","SD","ET","GH","CI","SN","RU","UA","BY","MD","RS","ME","BA","MK","AL","XK","IS","GL","FO","AD","MC","LI","SM","VA"]},"defaultCurrency":{"type":"string","enum":["USD","EUR","GBP","JPY","CHF","CAD","AUD","CNY","HKD","SEK","NOK","DKK","PLN","CZK","HUF","RON","BGN","HRK","RUB","TRY","BRL","MXN","ARS","CLP","COP","PEN","UYU","VES","KRW","SGD","TWD","THB","MYR","IDR","PHP","VND","INR","PKR","BDT","LKR","NPR","MMK","KHR","LAK","MNT","KZT","UZS","TJS","TMT","AZN","GEL","AMD","KGS","UAH","BYN","MDL","RSD","BAM","MKD","ALL","XCD","BBD","JMD","TTD","BZD","GYD","SRD","FJD","WST","TOP","VUV","PGK","SBD","KID","TVD","NIO","GTQ","HNL","SVC","PAB","CRC","BOB","EGP","MAD","TND","DZD","LYD","SDG","NGN","KES","GHS","XOF","XAF","XPF","ZAR","BWP","NAM","LSL","SZL","ZMW","ZWL","MWK","TZS","UGX","RWF","BIF","KMF","DJF","SOS","ERN","STN","CVE","GMD","GNF","SLL","LRD","GIP","FKP","SHP","IMP","JEP","GGP","ANG","AWG","BMD","KYD","BND","MOP","BTN","MVR","SCR","MUR","CDF","ETB","XDR","XAU","XAG","XPT","XPD"]},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}}},"TransactionDto":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"username":{"type":"string"},"transactionType":{"type":"string","enum":["TRANSFER","EXPENSE","INCOME"]},"walletFromId":{"type":"string","format":"uuid"},"walletToId":{"type":"string","format":"uuid"},"amount":{"type":"number","minimum":0.01},"exchangeRate":{"type":"number","minimum":0.000001},"walletToAmount":{"type":"number"},"note":{"type":"string","maxLength":1000,"minLength":0},"effectiveDate":{"type":"string","format":"date"},"categoryId":{"type":"string","format":"uuid"},"walletFromName":{"type":"string"},"walletToName":{"type":"string"},"categoryName":{"type":"string"}},"required":["amount","effectiveDate","exchangeRate","transactionType"]},"CategoryDto":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"username":{"type":"string"},"name":{"type":"string","maxLength":100,"minLength":1},"color":{"type":"string","maxLength":7,"minLength":7,"pattern":"^#[0-9A-Fa-f]{6}$"},"categoryType":{"type":"string","enum":["EXPENSE","INCOME"]},"iconUrl":{"type":"string","maxLength":500,"minLength":0},"parentCategoryId":{"type":"string","format":"uuid"},"parentCategoryName":{"type":"string"},"active":{"type":"boolean"},"childCount":{"type":"integer","format":"int32"}},"required":["categoryType","color","name"]},"ReorderWalletsRequest":{"type":"object","properties":{"walletIds":{"type":"array","items":{"type":"string","format":"uuid"}}},"required":["walletIds"]},"Pageable":{"type":"object","properties":{"page":{"type":"integer","format":"int32","minimum":0},"size":{"type":"integer","format":"int32","minimum":1},"sort":{"type":"array","items":{"type":"string"}}}},"PageTransactionDto":{"type":"object","properties":{"totalPages":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"size":{"type":"integer","format":"int32"},"content":{"type":"array","items":{"$ref":"#/components/schemas/TransactionDto"}},"number":{"type":"integer","format":"int32"},"sort":{"$ref":"#/components/schemas/Sortnull"},"first":{"type":"boolean"},"last":{"type":"boolean"},"numberOfElements":{"type":"integer","format":"int32"},"pageable":{"$ref":"#/components/schemas/Pageablenull"},"empty":{"type":"boolean"}}},"Pageablenull":{"type":"object","properties":{"offset":{"type":"integer","format":"int64"},"sort":{"$ref":"#/components/schemas/Sortnull"},"pageSize":{"type":"integer","format":"int32"},"pageNumber":{"type":"integer","format":"int32"},"paged":{"type":"boolean"},"unpaged":{"type":"boolean"}}},"Sortnull":{"type":"object","properties":{"empty":{"type":"boolean"},"sorted":{"type":"boolean"},"unsorted":{"type":"boolean"}}}}}}